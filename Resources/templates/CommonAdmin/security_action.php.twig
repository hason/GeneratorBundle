{% block security_use %}
use Symfony\Component\Security\Core\Exception\AccessDeniedException;
use JMS\SecurityExtraBundle\Security\Authorization\Expression\Expression;
{% endblock %}

{% block security_check %}
    /**
     * Check user credentials
     *
     * @param string $credentials
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @throws AccessDeniedException if is not allowed
     */
    protected function checkCredentials($credentials, \{{ model }} ${{ builder.ModelClass }} = null)
    {
        if (!$this->evaluate($credentials, ${{ builder.ModelClass }})) {
            throw new AccessDeniedException();
        }
    }

    /**
     * Evaluate expression
     *
     * @param string $expression
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @return boolean
     */
    protected function evaluate($expression, \{{ model }} ${{ builder.ModelClass }} = null)
    {
        return $this
            ->get('security.context')
            ->isGranted(array(new Expression($expression)), ${{ builder.ModelClass }});
    }
{% endblock %}

{% block security_action %}
{% if builder.yamlKey is sameas('actions')  %}
    {% if action is defined and action.credentials %}
    $this->checkCredentials('{{ action.credentials }}');
    {% endif %}
{% elseif credentials %}
    $this->checkCredentials('{{ credentials }}');
{% endif %}
{% endblock %}

{% block security_action_with_object %}
{% if builder.yamlKey is sameas('actions') %}
    {% if action is defined and action.credentials %}
    $this->checkCredentials('{{ action.credentials }}', ${{ builder.ModelClass }});
    {% endif %}
{% elseif credentials %}
    $this->checkCredentials('{{ credentials }}', ${{ builder.ModelClass }});
{% endif %}
{% endblock %}
